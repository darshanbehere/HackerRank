import java.util.*;
public class HighestValuePalindrome {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        int k=sc.nextInt();
        int n=s.length();
        n=n-1;
//        System.out.println(s.substring(6,6));
//        System.out.println(n);
        int oddcnt=(k/2)+1;
        int start=0;
        int end=n;
        int count=0;
        if(k%2!=0){
            while(count!=oddcnt&&start<end){
                
                if(s.charAt(start)!=s.charAt(end)){
                    int fstart=Character.getNumericValue(s.charAt(start));
                    int fend=Character.getNumericValue(s.charAt(end));
                    
                    if(fstart>fend)
                        s=s.substring(0,end)+s.charAt(start)+s.substring(end+1,n+1);
                    else
                       s=s.substring(0,start)+s.charAt(n-start)+s.substring(start+1,n+1);
                    }
                else
                    count--;
                    count++;
                    start++;
                    end=n-start;
                }
            }
        else{
            while(count!=k/2&&start<end){
                if(s.charAt(start)!=s.charAt(end)){
                    s=s.substring(0,start)+9+s.substring(start+1,end)+9+s.substring(end+1, n+1);
                }
                else
                    count--;
                count++;
                start++;
                end=n-start;
            }
        }
        System.out.println(s);
        }
        
    }
